plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.swapna.metaweather"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures{
        dataBinding = true
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
def lifeCycleExtensionVersion = '2.2.0'
def supportVersion = '30.0.0'
def retrofitVersion = '2.9.0'
def daggerVersion = '2.27'
def mockitoVersion = '3.4.6'
def coroutines = "1.4.3"
def moshi_version = "1.9.3"
def glideVersion = '4.9.0'
def viewPager2 = '1.0.0'
def androidx_version = '1.1.0'

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    //ktx
    implementation 'androidx.core:core-ktx:1.3.2'

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    implementation 'com.google.android.material:material:1.0.0'
    implementation "com.android.support:design:$supportVersion"

    //ViewPager
    implementation "androidx.viewpager2:viewpager2:$viewPager2"

    //Lifecycle, LiveData
    implementation "android.arch.lifecycle:extensions:$lifeCycleExtensionVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifeCycleExtensionVersion"
    //ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifeCycleExtensionVersion"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "com.github.bumptech.glide:compiler:4.9.0"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    //coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    //Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    implementation "androidx.activity:activity-ktx:$androidx_version"
    implementation "androidx.fragment:fragment-ktx:$androidx_version"

    // logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    //testing
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.9"
    testImplementation "com.google.truth:truth:1.0.1"

    //mockito
    testImplementation "org.mockito:mockito-core:3.4.6"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "android.arch.core:core-testing:1.1.1"
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3'





}